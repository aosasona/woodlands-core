Project woodlands_rms {
  database_type: 'MySQL'
  Note: 'The database schema for the Woodlands RMS group project'
}

enum UserType {
  staff
  student
}

enum Gender {
  male
  female
  others
}

enum WeekDay {
  mon
  tue
  wed
  thu
  fri
}

Table users {
  user_id int [pk, increment]
  email_address varchar(255) [not null, unique]
  hashed_password varchar(255) [not null]
  user_type UserType [not null]
  last_signed_in_at timestamp

  created_at timestamp [not null, default: `now()`]
  last_modified_at timestamp [not null, default: `now()`]
}

// Departments
Table departments {
  department_id int [pk, increment]
  name varchar(255) [not null, unique]
  description text

  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`, not null]
}


// Students
Table students {
  student_id int [pk, increment]
  first_name varchar(64) [not null]
  last_name varchar(64) [not null]
  date_of_birth date [not null]
  gender Gender [not null]
  nationality varchar(64) [not null]
  user_id int [not null, unique]
  department_id int

  enrolled_at date [not null]
  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`, not null]
}

Ref: students.student_id - users.user_id [delete: cascade]
Ref: students.department_id - departments.department_id [delete: set null]


// Staff
Table staff {
  staff_id int [pk, increment]
  first_name varchar(64) [not null]
  last_name varchar(64) [not null]
  role varchar(255)
  date_of_birth date [not null]
  gender Gender [not null]
  user_id int [not null, unique]
  department_id int
  hired_on date [not null]

  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`, not null]
}

Ref: staff.staff_id - users.user_id [delete: cascade]
Ref: staff.department_id - departments.department_id [delete: set null]


// Staff tutors
Table student_tutors {
  student_id int [unique]
  staff_id int

  assigned_on timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]

  indexes {
    (student_id, staff_id) [pk]
  }
}

Ref: student_tutors.student_id - students.student_id [delete: cascade]
Ref: student_tutors.staff_id > staff.staff_id [delete: cascade]

// Courses
Table courses {
  course_id int [pk, increment]
  name varchar(255) [not null, unique, note: "The name of the course e.g. Software Engineering"]
  description text
  department_id int 

  start_date date [not null]
  end_date date [note: "Describes when the course was discontinued or ended"]

  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]
}

Ref: courses.department_id - departments.department_id [delete: set null]

// Student courses enrollments
Table student_courses {
  course_id int
  student_id int

  enrolled_at timestamp [default: `now()`, not null]
  
  indexes {
    (course_id, student_id) [pk]
    student_id [unique]
    course_id
  }
}

Ref: student_courses.course_id > courses.course_id
Ref: student_courses.student_id - students.student_id

// Modules
Table modules {
  module_id int [pk, increment]
  name varchar(255) [not null, unique, note: "The name of the module e.g. Database Design and Development"]
  code varchar(16) [not null, unique, note: "The module code e.g. CS101"]
  description text

  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]
}

// Course module mapping
Table course_modules {
  course_id int
  module_id int

  created_at timestamp [default: `now()`, not null]

  indexes {
    (course_id, module_id) [pk]
    course_id
    module_id
  }
}

Ref: course_modules.course_id > courses.course_id
Ref: course_modules.module_id > modules.module_id


// Student modules
Table student_modules {
  module_id int
  student_id int

  created_at timestamp [default: `now()`, not null]

  indexes {
    (module_id, student_id) [pk]
    module_id
    student_id
  }
}

Ref: student_modules.module_id > modules.module_id
Ref: student_modules.student_id > students.student_id 


// Module tutors
Table module_tutors {
  staff_id int [not null]
  module_id int [not null]

  created_at timestamp [default: `now()`, not null]

  indexes {
    (module_id, staff_id) [pk]
    module_id
    staff_id
  }
}

Ref: module_tutors.module_id > modules.module_id
Ref: module_tutors.staff_id > staff.staff_id


// Module assessments
Table module_assessments {
  assessment_id int [pk, increment]
  module_id int [not null]
  title varchar(255) [not null]
  content text
  hidden bool [default: true]
  due_date timestamp
  
  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]
}

Ref: modules.module_id < module_assessments.module_id [delete: cascade]

// Classrooms
Table classrooms {
  classroom_id int [pk, increment]
  room_code varchar(16) [not null, unique]
  capacity int [not null]

  added_on timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]
}

// Module sessions
Table module_sessions {
  session_id int [pk, increment]
  module_id int [not null]
  room_id int
  day WeekDay [not null]
  from_time varchar(4) [not null]
  to_time varchar(4) [not null]

  created_at timestamp [default: `now()`, not null]
  last_modified_at timestamp [default: `now()`]
}

Ref: module_sessions.module_id > modules.module_id [delete: cascade]
Ref: module_sessions.room_id - classrooms.classroom_id [delete: set null]


// Student session mappings
Table student_class_schedules {
  Note:  "This is used to represent what sessions a student is on, which is in turn used to build the timetable"

  schedule_id int [pk, increment]

  student_id int [not null]
  session_id int [not null]

  indexes {
    (student_id, session_id) [unique]
  }
}

Ref: student_class_schedules.student_id > students.student_id [delete: cascade]
Ref: student_class_schedules.session_id > module_sessions.session_id [delete: cascade]


// Module sessions attendance data
Table module_sessions_attendance_data {
  Note : "This will be used to track weekly attendance and will contain data for the attached week, this makes it easier to record attendance on a weekly basis and linking back to a record; this table's records"
  attendance_id int [pk, increment]
  session_id int

  code varchar(8) [not null, note: "this is the attendance code that will be used by students to register their attendance"]

  created_at timestamp [default: `now()`, not null]

  indexes {
    (session_id, code) [unique]
  }
}

Ref: module_sessions_attendance_data.session_id  > module_sessions.session_id [delete: set null]

// Student attendance
Enum AttendanceStatus {
  present
  absent
  late
}

Table student_attendance {
  attendance_id int
  student_id int
  status AttendanceStatus [not null, default: "present"]

  recorded_at timestamp [default: `now()`, not null]

  indexes {
    (attendance_id, student_id) [pk]
    student_id
    attendance_id
  }
}

Ref: student_attendance.student_id > students.student_id [delete: cascade]
Ref: student_attendance.attendance_id > module_sessions_attendance_data.attendance_id [delete: cascade]


// Break schedule
Table school_break_schedule {
  schedule_id int [pk, increment]
  name varchar(255) [not null]
  from date [not null]
  to date [not null]
  created_at timestamp [default: `now()`]
  last_modified_at timestamp [default: `now()`, not null]
}
